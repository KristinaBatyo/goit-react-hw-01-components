{"ast":null,"code":"var _jsxFileName = \"/Users/hristinabato/Desktop/goit-react-hw-01-components/src/components/statistic/statistics.jsx\";\nimport PropTypes from 'prop-types'; // export const Statistic = ({statistic: {label, percentage}}) => {\n//   return (\n//     <section>\n//     <h2>Upload stats</h2>\n//     <ul>\n//         <li>\n//         <span>{label}</span>\n//         <span>{percentage}</span>\n//         </li>\n//         <li>\n//         <span>.mp3</span>\n//         <span>14%</span>\n//         </li>\n//         <li>\n//         <span>.pdf</span>\n//         <span>41%</span>\n//         </li>\n//         <li>\n//         <span>.mp4</span>\n//         <span>12%</span>\n//         </li>\n//     </ul>\n//     </section>\n//     );\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistic = _ref => {\n  let {\n    statistic\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: statistic.map(_ref2 => {\n        let {\n          id,\n          label,\n          percentage\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: percentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistic\");","map":{"version":3,"sources":["/Users/hristinabato/Desktop/goit-react-hw-01-components/src/components/statistic/statistics.jsx"],"names":["PropTypes","Statistic","statistic","map","id","label","percentage"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,SAAS,GAAG,QAAiB;AAAA,MAAhB;AAACC,IAAAA;AAAD,GAAgB;AACxC,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAGA;AAAA,gBACKA,SAAS,CAACC,GAAV,CAAc;AAAA,YAAC;AAACC,UAAAA,EAAD;AAAKC,UAAAA,KAAL;AAAYC,UAAAA;AAAZ,SAAD;AAAA,4BACX;AAAA,kCACA;AAAA,sBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA,WAASF,EAAT;AAAA;AAAA;AAAA;AAAA,gBADW;AAAA,OAAd;AADL;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfM;KAAMH,S","sourcesContent":["import PropTypes from 'prop-types';\n\n// export const Statistic = ({statistic: {label, percentage}}) => {\n//   return (\n//     <section>\n//     <h2>Upload stats</h2>\n    \n//     <ul>\n//         <li>\n//         <span>{label}</span>\n//         <span>{percentage}</span>\n//         </li>\n//         <li>\n//         <span>.mp3</span>\n//         <span>14%</span>\n//         </li>\n//         <li>\n//         <span>.pdf</span>\n//         <span>41%</span>\n//         </li>\n//         <li>\n//         <span>.mp4</span>\n//         <span>12%</span>\n//         </li>\n//     </ul>\n//     </section>\n//     );\n// }\n\nexport const Statistic = ({statistic}) => {\n  return (\n    <section>\n    <h2>Upload stats</h2>\n    \n    <ul>\n        {statistic.map(({id, label, percentage}) => (\n            <li key={id}>\n            <span>{label}</span>\n            <span>{percentage}</span>\n            </li>\n        ))}\n    </ul>\n    </section>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}
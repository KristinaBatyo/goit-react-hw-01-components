{"ast":null,"code":"var _jsxFileName = \"/Users/hristinabato/Desktop/goit-react-hw-01-components/src/components/user/User.jsx\";\nimport PropTypes from 'prop-types';\nimport { Title, Avatar, StatList, Tag, Location, Name, Item } from 'components/user/User.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const User = _ref => {\n  let {\n    user: {\n      username,\n      tag,\n      location,\n      avatar,\n      stats: {\n        followers,\n        views,\n        likes\n      }\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Title, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: avatar,\n        alt: tag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Name, {\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        children: [\"@\", tag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        children: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StatList, {\n      children: [/*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Followers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: followers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(I, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Views\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: views\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(I, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Likes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: likes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n};\n_c = User;\nUser.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired\n    })\n  })\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/Users/hristinabato/Desktop/goit-react-hw-01-components/src/components/user/User.jsx"],"names":["PropTypes","Title","Avatar","StatList","Tag","Location","Name","Item","User","user","username","tag","location","avatar","stats","followers","views","likes","propTypes","shape","string","isRequired","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,GAAlC,EAAuCC,QAAvC,EAAiDC,IAAjD,EAAuDC,IAAvD,QAAmE,6BAAnE;;AAEA,OAAO,MAAMC,IAAI,GAAG,QACb;AAAA,MADc;AAACC,IAAAA,IAAI,EAAE;AAACC,MAAAA,QAAD;AAAWC,MAAAA,GAAX;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA,MAA1B;AAAkCC,MAAAA,KAAK,EAAE;AAACC,QAAAA,SAAD;AAAYC,QAAAA,KAAZ;AAAmBC,QAAAA;AAAnB;AAAzC;AAAP,GACd;AACH,sBACQ,QAAC,KAAD;AAAA,4BACA;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEJ,MAAb;AAAsB,QAAA,GAAG,EAAEF;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA,QAAC,IAAD;AAAA,kBAAOD;AAAP;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA,QAAC,GAAD;AAAA,wBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,QAAD;AAAA,kBAAWC;AAAX;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAQA,QAAC,QAAD;AAAA,8BACA,QAAC,IAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBACCG;AADD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAOA,QAAC,CAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBACCC;AADD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA,eAaA,QAAC,CAAD;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBACCC;AADD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AA+BH,CAjCM;KAAMT,I;AAmCTA,IAAI,CAACU,SAAL,GAAiB;AACbT,EAAAA,IAAI,EAAET,SAAS,CAACmB,KAAV,CAAgB;AAClBT,IAAAA,QAAQ,EAAEV,SAAS,CAACoB,MAAV,CAAiBC,UADT;AAElBV,IAAAA,GAAG,EAAEX,SAAS,CAACoB,MAAV,CAAiBC,UAFJ;AAGlBT,IAAAA,QAAQ,EAAEZ,SAAS,CAACoB,MAAV,CAAiBC,UAHT;AAIlBR,IAAAA,MAAM,EAAEb,SAAS,CAACoB,MAAV,CAAiBC,UAJP;AAKlBP,IAAAA,KAAK,EAAEd,SAAS,CAACmB,KAAV,CAAgB;AACnBJ,MAAAA,SAAS,EAAEf,SAAS,CAACsB,MAAV,CAAiBD,UADT;AAEnBL,MAAAA,KAAK,EAAEhB,SAAS,CAACsB,MAAV,CAAiBD,UAFL;AAGnBJ,MAAAA,KAAK,EAAEjB,SAAS,CAACsB,MAAV,CAAiBD;AAHL,KAAhB;AALW,GAAhB;AADO,CAAjB","sourcesContent":["import PropTypes from 'prop-types';\nimport { Title, Avatar, StatList, Tag, Location, Name, Item } from 'components/user/User.styled';\n\nexport const User = ({user: {username, tag, location, avatar, stats: {followers, views, likes}\n}}) => {\n    return (\n            <Title>\n            <div>\n                <Avatar src={avatar } alt={tag} />\n            <Name>{username}</Name>\n            <Tag>@{tag}</Tag>\n            <Location>{location}</Location>\n            </div>\n        \n            <StatList>\n            <Item>\n                <span>Followers</span>\n                <span>\n                {followers}\n                </span>\n            </Item>\n            <I>\n                <span>Views</span>\n                <span>\n                {views}\n                </span>\n            </I>\n            <I>\n                <span>Likes</span>\n                <span>\n                {likes}\n                </span>\n            </I>\n            </StatList>\n        </Title>\n    )\n};\n\n    User.propTypes = {\n        user: PropTypes.shape({\n            username: PropTypes.string.isRequired,\n            tag: PropTypes.string.isRequired,\n            location: PropTypes.string.isRequired,\n            avatar: PropTypes.string.isRequired,\n            stats: PropTypes.shape({\n                followers: PropTypes.number.isRequired,\n                views: PropTypes.number.isRequired,\n                likes: PropTypes.number.isRequired,\n            }),\n        }),\n    };\n\n"]},"metadata":{},"sourceType":"module"}